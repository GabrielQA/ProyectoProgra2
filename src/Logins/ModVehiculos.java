/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Logins;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel
 */
public class ModVehiculos extends javax.swing.JFrame {

    String Clave;
    int tt;
    int qq;
    String MarcaID;
    String ModeloID;
    String EstiloID;
    String Estado1;
    String Placa;
    String Marca;
    String Modelo;
    String Estilo;
    String Transmision;
    String Transmision1;
    String AÃ±o;
    String Precio;
    String foto;
    String Estado;
    private Connection connection = null;
    private ResultSet rs = null;
    private Statement s = null;

    public void Conexion() {
        if (connection != null) {
            return;
        }

        String url = "jdbc:postgresql://localhost:5433/proyect";
        String password = "123";
        try {
            Class.forName("org.postgresql.Driver");
            connection = DriverManager.getConnection(url, "postgres", password);
            if (connection != null) {
                System.out.println("Connecting to database...");
            }
        } catch (Exception e) {
            System.out.println("Problem when connecting to the database");
        }
    }

    /**
     * Creates new form ModVehiculos
     */
    public ModVehiculos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        A = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        R5 = new javax.swing.JRadioButton();
        R5R = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        R2 = new javax.swing.JTextField();
        R3 = new javax.swing.JTextField();
        R4 = new javax.swing.JTextField();
        R7 = new javax.swing.JTextField();
        A1 = new javax.swing.JRadioButton();
        B = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Modificar Vehiculo");

        jLabel1.setText("Placa");

        A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AActionPerformed(evt);
            }
        });

        jButton1.setText("Atras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Modificar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        R5.setText("Manual");
        R5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R5ActionPerformed(evt);
            }
        });

        R5R.setText("Automatico");
        R5R.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R5RActionPerformed(evt);
            }
        });

        jLabel2.setText("ID Marca");

        jLabel4.setText("ID Modelo");

        jLabel5.setText("ID Estilo");

        jLabel6.setText("Transmicion");

        jLabel8.setText("Precio");

        jLabel9.setText("Foto");

        jLabel10.setText("Estado");

        R2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2ActionPerformed(evt);
            }
        });

        A1.setText("Disponible");
        A1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A1ActionPerformed(evt);
            }
        });

        B.setText("Ocupado");
        B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(R5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(R5R))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(44, 44, 44))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(67, 67, 67)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(A)
                                    .addComponent(R2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(R3, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(R4, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                                        .addComponent(R7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel10)
                                            .addGap(32, 32, 32)
                                            .addComponent(A1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(B))))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(A, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(R2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(R3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(R4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(R5)
                    .addComponent(R5R))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(R7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel9)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(A1)
                    .addComponent(B))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(71, 71, 71))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Administrador Log = new Administrador();
        Log.setVisible(true);
        Log.setEnabled(true);
        Log.setLocationRelativeTo(null);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        modiMarca();
        modiMoldelo();
        modiEstado();
        modiEstilo();
        modiPrecio();
        modiTrans();
        modifoto();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void R5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R5ActionPerformed
        tt = 1;
        if (R5.isSelected()) {
            R5R.setSelected(false);
        }
    }//GEN-LAST:event_R5ActionPerformed

    private void R5RActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R5RActionPerformed
        tt = 2;
        if (R5R.isSelected()) {
            R5.setSelected(false);
        }
    }//GEN-LAST:event_R5RActionPerformed

    private void R2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_R2ActionPerformed

    private void A1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A1ActionPerformed
        qq = 1;
        if (A1.isSelected()) {
            B.setSelected(false);
        }
    }//GEN-LAST:event_A1ActionPerformed

    private void BActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BActionPerformed
        qq = 2;
        if (B.isSelected()) {
            A1.setSelected(false);
        }
    }//GEN-LAST:event_BActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModVehiculos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModVehiculos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField A;
    private javax.swing.JRadioButton A1;
    private javax.swing.JRadioButton B;
    private javax.swing.JTextField R2;
    private javax.swing.JTextField R3;
    private javax.swing.JTextField R4;
    private javax.swing.JRadioButton R5;
    private javax.swing.JRadioButton R5R;
    private javax.swing.JTextField R7;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
public void modiMarca() {
        Conexion();

        try {
            Placa = A.getText();
            Marca = R2.getText();
            Modelo = R3.getText();
            Estilo = R4.getText();
            Transmision = R5.getText();
            Transmision1 = R5R.getText();

            Precio = R7.getText();
            foto = "";
            Estado = A.getText();
            Estado1 = B.getText();

            s = connection.createStatement();

            int z = s.executeUpdate("UPDATE vehiculo SET marcaid ='" + Marca + "' WHERE placa  = '" + Placa + "'");
            //int z = s.executeUpdate("UPDATE vehiculo SET marcaid ='" + Marca + "SET modeloid ='"+Modelo+" WHERE placa  = '" + Placa+ "'"); 

            if (z == 1) {
               // JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, " la marca no existe\n Ingresela nuevamente");
        }
    }

    public void modiMoldelo() {
        Conexion();

        try {
            Placa = A.getText();
            Marca = R2.getText();
            Modelo = R3.getText();
            Estilo = R4.getText();
            Transmision = R5.getText();
            Transmision1 = R5R.getText();

            Precio = R7.getText();
            foto = "";
            Estado = A.getText();
            Estado1 = B.getText();

            s = connection.createStatement();

            int z = s.executeUpdate("UPDATE vehiculo SET modeloid ='" + Modelo + "' WHERE placa  = '" + Placa + "'");
            //int z = s.executeUpdate("UPDATE vehiculo SET marcaid ='" + Marca + "SET modeloid ='"+Modelo+" WHERE placa  = '" + Placa+ "'"); 

            if (z == 1) {
               // JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "El modelo no existe\n Ingresela nuevamente");
        }
    }

    public void modiEstilo() {
        Conexion();

        try {
            Placa = A.getText();
            Marca = R2.getText();
            Modelo = R3.getText();
            Estilo = R4.getText();
            Transmision = R5.getText();
            Transmision1 = R5R.getText();

            Precio = R7.getText();
            foto = "";
            Estado = A.getText();
            Estado1 = B.getText();

            s = connection.createStatement();

            int z = s.executeUpdate("UPDATE vehiculo SET Estiloid ='" + Estilo + "' WHERE placa  = '" + Placa + "'");
            //int z = s.executeUpdate("UPDATE vehiculo SET marcaid ='" + Marca + "SET modeloid ='"+Modelo+" WHERE placa  = '" + Placa+ "'"); 

            if (z == 1) {
                //JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "El estilo no existe\n Ingresela nuevamente");
        }
    }

    public void modiTrans() {
        Conexion();

        try {
            Placa = A.getText();
            Marca = R2.getText();
            Modelo = R3.getText();
            Estilo = R4.getText();
            Transmision = R5.getText();
            Transmision1 = R5R.getText();

            Precio = R7.getText();
            foto = "";
            Estado = A.getText();
            Estado1 = B.getText();

            s = connection.createStatement();
            if (tt == 1) {
                int z = s.executeUpdate("UPDATE vehiculo SET transmision ='" + Transmision + "' WHERE placa  = '" + Placa + "'");
                if (z == 1) {
                    //JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
                }
            } else if (tt == 0) {
                int z = s.executeUpdate("UPDATE vehiculo SET transmision ='" + Transmision1 + "' WHERE placa  = '" + Placa + "'");
                if (z == 1) {
                    //JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
                }
            }

        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "transimision igual\n Ingresela nuevamente");
        }
    }

    public void modiEstado() {
        Conexion();

        try {
            Placa = A.getText();
            Marca = R2.getText();
            Modelo = R3.getText();
            Estilo = R4.getText();
            Transmision = R5.getText();
            Transmision1 = R5R.getText();

            Precio = R7.getText();
            foto = "";
            Estado = A.getText();
            Estado1 = B.getText();

            s = connection.createStatement();
            if (qq == 1) {
                int z = s.executeUpdate("UPDATE vehiculo SET estado ='" + Estado + "' WHERE placa  = '" + Placa + "'");
                if (z == 1) {
                    //JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
                }
            } else if (qq == 2) {
                int z = s.executeUpdate("UPDATE vehiculo SET estado ='" + Estado1 + "' WHERE placa  = '" + Placa + "'");
                if (z == 1) {
                   // JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
                }
            }

        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Mismo estado\nIngresela nuevamente");
        }
    }

    public void modiPrecio() {
        Conexion();

        try {
            Placa = A.getText();
            Marca = R2.getText();
            Modelo = R3.getText();
            Estilo = R4.getText();
            Transmision = R5.getText();
            Transmision1 = R5R.getText();

            Precio = R7.getText();
            foto = "";
            Estado = A.getText();
            Estado1 = B.getText();

            s = connection.createStatement();

            int z = s.executeUpdate("UPDATE vehiculo SET precio ='" + Precio + "' WHERE placa  = '" + Placa + "'");
            //int z = s.executeUpdate("UPDATE vehiculo SET marcaid ='" + Marca + "SET modeloid ='"+Modelo+" WHERE placa  = '" + Placa+ "'"); 

            if (z == 1) {
               // JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Precio no valorado\n Ingresela nuevamente");
        }
    }

      public void modifoto() {
        Conexion();

        try {
            Placa = A.getText();
            Marca = R2.getText();
            Modelo = R3.getText();
            Estilo = R4.getText();
            Transmision = R5.getText();
            Transmision1 = R5R.getText();

            Precio = R7.getText();
            foto = "";
            Estado = A.getText();
            Estado1 = B.getText();

            s = connection.createStatement();

            int z = s.executeUpdate("UPDATE vehiculo SET foto ='" + foto + "' WHERE placa  = '" + Placa + "'");
            //int z = s.executeUpdate("UPDATE vehiculo SET marcaid ='" + Marca + "SET modeloid ='"+Modelo+" WHERE placa  = '" + Placa+ "'"); 

            if (z == 1) {
               JOptionPane.showMessageDialog(rootPane, "Se a modificado correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Modificacion erronea");
            }
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, "Precio no valorado\n Ingresela nuevamente");
        }
    }
}
